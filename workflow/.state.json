{
  "id": "31d1c53b-d524-4dd6-b353-33926cc13008",
  "name": "collections-demo",
  "description": "TNG demo\n",
  "inserted_at": "2024-12-11T17:56:50Z",
  "updated_at": "2024-12-11T17:56:50Z",
  "scheduled_deletion": null,
  "project_credentials": {},
  "history_retention_period": null,
  "dataclip_retention_period": null,
  "retention_policy": "retain_all",
  "workflows": {
    "Get-Quote": {
      "id": "aee65119-06cf-49b0-98fc-fc9db5f9b59c",
      "name": "Get Quote",
      "edges": {
        "webhook->Get-quote": {
          "enabled": true,
          "id": "9fb5a303-5249-4611-bf8a-12a72f479264",
          "source_trigger_id": "d415cd4d-76da-4774-8582-25f222bd9051",
          "condition_type": "always",
          "target_job_id": "cbaba465-51ab-46fb-a26f-1986dd7e63bf"
        }
      },
      "concurrency": null,
      "inserted_at": "2024-12-11T17:56:50Z",
      "updated_at": "2024-12-11T17:56:50Z",
      "jobs": {
        "Get-quote": {
          "id": "cbaba465-51ab-46fb-a26f-1986dd7e63bf",
          "name": "Get quote",
          "body": "const randInt = (max) => Math.floor(Math.random() * max)\n\ncollections.get(\"tng-lines\", `*${$.data.character}*`).then((state) => {\n  return {\n    ...state,\n    lines: state.data,\n  };\n});\n\ncollections.get(\"tng-char-map\", \"characters\").then((state) => {\n  return {\n    ...state,\n    characters: state.data,\n  };\n});\n\nfn((state) => {\n  console.log(`Fetched ${Object.keys(state.lines).length} lines`);\n\n  const { value: quote } = state.lines[randInt(state.lines.length)];\n  const name = state.characters[quote.character] || quote.character;\n\n  console.log (`\n\"${quote.quote}\"\n -- ${name} - ${quote.title}\n`);\n\n  return state.data;\n});\n\n// TODO post our quote somewhere!\n",
          "adaptor": "@openfn/language-common@latest",
          "project_credential_id": null
        }
      },
      "deleted_at": null,
      "lock_version": 1,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "d415cd4d-76da-4774-8582-25f222bd9051",
          "type": "webhook"
        }
      }
    },
    "Upload-Scripts": {
      "id": "17d32cbb-bf89-4f44-9fef-e36f346f3550",
      "name": "Upload Scripts",
      "edges": {
        "webhook->save-script": {
          "enabled": true,
          "id": "374d6433-e646-4b1a-ae57-3fbc46a35e8c",
          "source_trigger_id": "ffea340e-26fe-4b0d-aea6-b8b276d1f244",
          "condition_type": "always",
          "target_job_id": "3cce4457-b6f6-4cfa-b5a8-c7c94fcf26fb"
        },
        "save-script->parse-script": {
          "enabled": true,
          "id": "9dd68c9a-7b09-4e6a-abc0-368d3a66e9f0",
          "source_job_id": "3cce4457-b6f6-4cfa-b5a8-c7c94fcf26fb",
          "condition_type": "on_job_success",
          "target_job_id": "513f6eff-0551-4262-afb7-e35ddf4daa41"
        }
      },
      "concurrency": null,
      "inserted_at": "2024-12-11T17:56:50Z",
      "updated_at": "2024-12-11T17:56:50Z",
      "jobs": {
        "save-script": {
          "id": "3cce4457-b6f6-4cfa-b5a8-c7c94fcf26fb",
          "name": "save script",
          "body": "collections.set(\"tng-scripts\", (item) => `${item.episode}`, $.data);\n",
          "adaptor": "@openfn/language-common@latest",
          "project_credential_id": null
        },
        "parse-script": {
          "id": "513f6eff-0551-4262-afb7-e35ddf4daa41",
          "name": "parse script",
          "body": "fn((state) => {\n  const { text, episode, title } = state.data;\n  console.log(`Parsing lines for ${episode} - ${title}`);\n\n  const characters = {};\n\n  // pull out each line\n  const lines = text\n    .split(\"\\n\")\n    .filter((line) => line.length)\n    .filter((line) => /[A-Z]+\\:/.test(line))\n    .map((line, index) => {\n      const [name, ...rest] = line.split(\":\");\n      const character = name.trim().toLowerCase();\n      characters[character] = true;\n      return {\n        id: `${character}-${episode}-${index}`,\n        character,\n        episode,\n        title,\n        quote: rest.join(\"\").trim(),\n      };\n    });\n\n  console.log(`Parsed ${lines.length} lines!`);\n  console.log(\"First line:\");\n  console.log(lines[0]);\n\n  return {\n    lines,\n    characters,\n    ...state,\n  };\n});\n\n// Now upload all the values\ncollections.set(\"tng-lines\", (item) => item.id, $.lines);\n\n// Now update the character map\ncollections.get(\"tng-char-map\", \"characters\");\n\n// Add new characters to the map\nfn((state) => {\n  console.log(\"Updating character map\");\n\n  const map = state.data;\n\n  for (const id in state.characters) {\n    if (!id in map) {\n      console.log(\"Adding character\", id);\n      map[id] = false;\n    }\n  }\n\n  return {\n    characters: map,\n    ...state,\n  };\n});\n\ncollections.set(\"tng-char-map\", \"characters\", $.characters);\n",
          "adaptor": "@openfn/language-common@latest",
          "project_credential_id": null
        }
      },
      "deleted_at": null,
      "lock_version": 1,
      "triggers": {
        "webhook": {
          "enabled": true,
          "id": "ffea340e-26fe-4b0d-aea6-b8b276d1f244",
          "type": "webhook"
        }
      }
    }
  },
  "requires_mfa": false
}